(()=>{"use strict";var n={152:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),c=t(667),s=t.n(c),A=new URL(t(232),t.b),d=new URL(t(837),t.b),l=i()(a()),m=s()(A),f=s()(d);l.push([n.id,`/* Global Vars, html reset and custom fonts */\n:root {\n  --primary-dark: rgba(20, 37, 37, 0.932);\n  --primary-light: rgba(139, 244, 241, 0.983);\n  --secondary-light: rgba(220, 235, 241, 0.933);\n  --test: rgba(225, 225, 225, 0.683);\n  --primary-font: "Hack";\n}\n\n*,\n::before,\n::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  scroll-behavior: smooth;\n}\n\n@font-face {\n  font-family: Hack;\n  src: url(${m}) format("woff2"),\n    url(${f}) format("woff");\n  font-weight: bold;\n  font-style: normal;\n}\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n  overflow-x: hidden;\n}\n\nhtml body {\n  font-size: 1.2rem;\n  padding: 0px;\n  margin: 0px;\n  font-family: Hack, "Lucida", "Roboto";\n}\n\n/* Main Property assignment */\n.main {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  padding: 2rem;\n  color: var(--primary-dark);\n}\n\n.search-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  padding: 0.5rem;\n  color: var(--primary-dark);\n}\n\ninput {\n  font-size: 1rem;\n  margin: 1.5rem 0 1rem 0;\n  padding: 0.5rem;\n  border-radius: 5px;\n}\n\ninput:focus {\n  border: none;\n  box-shadow: 4px 4px 5px rgba(0, 0, 0, 0.342);\n  outline: none;\n  border: 2px solid rgb(74, 202, 198);\n}\n\n.error-message {\n  font-size: 1rem;\n  color: rgb(255, 69, 100);\n}\n\n.btn-search {\n  font-size: 1.15rem;\n  font-weight: 600;\n  background-color: rgb(74, 202, 198);\n  border-radius: 5px;\n  margin: 1rem;\n  padding: 0.4rem 1rem;\n  transition: transform 0.1s ease-in-out;\n}\n\n.btn-search:hover {\n  cursor: pointer;\n}\n\n.btn-search:active {\n  transform: scale(0.9);\n}\n\n.results-now-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  width: 75vw;\n  gap: 1.5rem;\n}\n\n.visible {\n  border: 2px solid var(--primary-dark);\n  border-radius: 5px;\n  padding: 0.5rem 2rem;\n}\n\n.container > * {\n  padding: 0.2rem 0.5rem;\n}\n\n.container > :first-child {\n  font-size: 1.5rem;\n  font-weight: bolder;\n}\n\n#city {\n  background-color: var(--primary-light);\n  min-width: 321px;\n  max-width: fit-content;\n  position: relative;\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n#nowcast {\n  min-width: 321px;\n  text-align: center;\n}\n\n#forecast {\n  width: 75vw;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(321px, 1fr));\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-top: 1.5rem;\n  gap: 1.5rem;\n}\n\n.forecast-day {\n  max-width: 640px;\n}\n.footer {\n  position: absolute;\n  bottom: 0px;\n  color: var(--primary-dark);\n  text-align: center;\n  display: flex;\n  align-content: center;\n  gap: 10px;\n  margin: 24px;\n  font-size: 1rem;\n}\n\n.am-github {\n  text-decoration: none;\n  color: inherit;\n  transition: transform 0.3s ease-in-out;\n}\n\n.am-github:hover {\n  transform: scale(1.25);\n} /* Pulls focus to github link when hovered */\n\n@media screen and (max-width: 875px) {\n  #city {\n    max-width: min-content;\n  }\n\n  #forecast {\n    max-width: fit-content;\n    grid-template-columns: repeat(auto-fill, minmax(321px, 1fr));\n  }\n}\n\n@media screen and (min-width: 1000px) {\n  #forecast {\n    grid-template-columns: repeat(3, minmax(321px, 1fr));\n  }\n}\n`,"",{version:3,sources:["webpack://./src/assets/styles.css"],names:[],mappings:"AAAA,6CAA6C;AAC7C;EACE,uCAAuC;EACvC,2CAA2C;EAC3C,6CAA6C;EAC7C,kCAAkC;EAClC,sBAAsB;AACxB;;AAEA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;EACjB;0DACiD;EACjD,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,YAAY;EACZ,WAAW;EACX,qCAAqC;AACvC;;AAEA,6BAA6B;AAC7B;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,aAAa;EACb,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,eAAe;EACf,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,4CAA4C;EAC5C,aAAa;EACb,mCAAmC;AACrC;;AAEA;EACE,eAAe;EACf,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,mCAAmC;EACnC,kBAAkB;EAClB,YAAY;EACZ,oBAAoB;EACpB,sCAAsC;AACxC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,uBAAuB;EACvB,uBAAuB;EACvB,WAAW;EACX,WAAW;AACb;;AAEA;EACE,qCAAqC;EACrC,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,sCAAsC;EACtC,gBAAgB;EAChB,sBAAsB;EACtB,kBAAkB;EAClB,OAAO;EACP,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,4DAA4D;EAC5D,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,0BAA0B;EAC1B,kBAAkB;EAClB,aAAa;EACb,qBAAqB;EACrB,SAAS;EACT,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,cAAc;EACd,sCAAsC;AACxC;;AAEA;EACE,sBAAsB;AACxB,EAAE,4CAA4C;;AAE9C;EACE;IACE,sBAAsB;EACxB;;EAEA;IACE,sBAAsB;IACtB,4DAA4D;EAC9D;AACF;;AAEA;EACE;IACE,oDAAoD;EACtD;AACF",sourcesContent:['/* Global Vars, html reset and custom fonts */\n:root {\n  --primary-dark: rgba(20, 37, 37, 0.932);\n  --primary-light: rgba(139, 244, 241, 0.983);\n  --secondary-light: rgba(220, 235, 241, 0.933);\n  --test: rgba(225, 225, 225, 0.683);\n  --primary-font: "Hack";\n}\n\n*,\n::before,\n::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  scroll-behavior: smooth;\n}\n\n@font-face {\n  font-family: Hack;\n  src: url("./fonts/Hack-Regular.woff2") format("woff2"),\n    url("./fonts/Hack-Regular.woff") format("woff");\n  font-weight: bold;\n  font-style: normal;\n}\n\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n  overflow-x: hidden;\n}\n\nhtml body {\n  font-size: 1.2rem;\n  padding: 0px;\n  margin: 0px;\n  font-family: Hack, "Lucida", "Roboto";\n}\n\n/* Main Property assignment */\n.main {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  padding: 2rem;\n  color: var(--primary-dark);\n}\n\n.search-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  padding: 0.5rem;\n  color: var(--primary-dark);\n}\n\ninput {\n  font-size: 1rem;\n  margin: 1.5rem 0 1rem 0;\n  padding: 0.5rem;\n  border-radius: 5px;\n}\n\ninput:focus {\n  border: none;\n  box-shadow: 4px 4px 5px rgba(0, 0, 0, 0.342);\n  outline: none;\n  border: 2px solid rgb(74, 202, 198);\n}\n\n.error-message {\n  font-size: 1rem;\n  color: rgb(255, 69, 100);\n}\n\n.btn-search {\n  font-size: 1.15rem;\n  font-weight: 600;\n  background-color: rgb(74, 202, 198);\n  border-radius: 5px;\n  margin: 1rem;\n  padding: 0.4rem 1rem;\n  transition: transform 0.1s ease-in-out;\n}\n\n.btn-search:hover {\n  cursor: pointer;\n}\n\n.btn-search:active {\n  transform: scale(0.9);\n}\n\n.results-now-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  width: 75vw;\n  gap: 1.5rem;\n}\n\n.visible {\n  border: 2px solid var(--primary-dark);\n  border-radius: 5px;\n  padding: 0.5rem 2rem;\n}\n\n.container > * {\n  padding: 0.2rem 0.5rem;\n}\n\n.container > :first-child {\n  font-size: 1.5rem;\n  font-weight: bolder;\n}\n\n#city {\n  background-color: var(--primary-light);\n  min-width: 321px;\n  max-width: fit-content;\n  position: relative;\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n#nowcast {\n  min-width: 321px;\n  text-align: center;\n}\n\n#forecast {\n  width: 75vw;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(321px, 1fr));\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-top: 1.5rem;\n  gap: 1.5rem;\n}\n\n.forecast-day {\n  max-width: 640px;\n}\n.footer {\n  position: absolute;\n  bottom: 0px;\n  color: var(--primary-dark);\n  text-align: center;\n  display: flex;\n  align-content: center;\n  gap: 10px;\n  margin: 24px;\n  font-size: 1rem;\n}\n\n.am-github {\n  text-decoration: none;\n  color: inherit;\n  transition: transform 0.3s ease-in-out;\n}\n\n.am-github:hover {\n  transform: scale(1.25);\n} /* Pulls focus to github link when hovered */\n\n@media screen and (max-width: 875px) {\n  #city {\n    max-width: min-content;\n  }\n\n  #forecast {\n    max-width: fit-content;\n    grid-template-columns: repeat(auto-fill, minmax(321px, 1fr));\n  }\n}\n\n@media screen and (min-width: 1000px) {\n  #forecast {\n    grid-template-columns: repeat(3, minmax(321px, 1fr));\n  }\n}\n'],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],A=r.base?s[0]+r.base:s[0],d=o[A]||0,l="".concat(A," ").concat(d);o[A]=d+1;var m=t(l),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(f);else{var p=a(f,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=r(n,a),A=0;A<o.length;A++){var d=t(o[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},837:(n,e,t)=>{n.exports=t.p+"e1e9c3d95e7c8459ac7a.woff"},232:(n,e,t)=>{n.exports=t.p+"ff44a2fdceee936b71a1.woff2"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!n;)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),A=t(216),d=t.n(A),l=t(589),m=t.n(l),f=t(152),p={};p.styleTagTransform=m(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=d(),e()(f.Z,p),f.Z&&f.Z.locals&&f.Z.locals;const u=async function(n){try{const e=document.getElementById("search-feedback");e.textContent="Searching . . . ";const t=`https://api.weatherapi.com/v1/forecast.json?key=1fdeb95185c145f0809201723232908&q=${n}&days=3&aqi=yes&alerts=no`,r=await fetch(t,{mode:"cors"});return r.ok?e.textContent="":e.textContent=`City "${n}" not found. Check search and try again`,r.json()}catch(n){return null}},C=function(n){const e={city:n.location.name,region:`${n.location.region}, ${n.location.country}`,time:`Local Time: ${n.location.localtime.slice(-5)}`,date:`Today: ${n.location.localtime.slice(0,10)}`},t={condition:`${n.current.temp_c} °C, ${n.current.condition.text}`,conditionIcon:n.current.condition.icon,precip:`Precip: ${n.current.precip_mm} mm`,wind:`Wind: ${n.current.wind_kph} kph, ${n.current.wind_dir}`,feelsLike:`Gusting to ${n.current.gust_kph} kph, Feels like ${n.current.feelslike_c} °C`},r=[];for(let e=0;e<n.forecast.forecastday.length;e++){const t=n.forecast.forecastday[e].day.daily_will_it_snow;r[e]={date:n.forecast.forecastday[e].date,conditionIcon:n.forecast.forecastday[e].day.condition.icon,condition:n.forecast.forecastday[e].day.condition.text,maxTemps:`High: ${n.forecast.forecastday[e].day.maxtemp_c} °C`,minTemps:`Low: ${n.forecast.forecastday[e].day.mintemp_c} °C`,humidity:`Humidity: ${n.forecast.forecastday[e].day.avghumidity}% Humidity`,precip:t?`Precipitation: ${n.forecast.forecastday[e].day.daily_chance_of_snow}% chance`:`Precipitation: ${n.forecast.forecastday[e].day.daily_chance_of_rain}% chance`,precipTotal:t?`Total: ${n.forecast.forecastday[e].day.totalsnow_cm}cm snow`:`Total: ${n.forecast.forecastday[e].day.totalprecip_mm}mm rain`,sunrise:`Sunrise: ${n.forecast.forecastday[e].astro.sunrise}`,sunset:`Sunset: ${n.forecast.forecastday[e].astro.sunset}`}}return{place:e,current:t,forecast:r}},g=(()=>{function n(n,e){const t="forecast-day"!==n.classList[0]?2:0;switch(e.condition.split(" ")[t]){case"Clear":default:n.style.backgroundColor="white";break;case"Sunny":n.style.backgroundColor="rgba(254, 254, 176, 0.983)";break;case"Partly":n.style.backgroundColor="rgba(186, 231, 230, 0.983)";break;case"Cloudy":n.style.backgroundColor="rgba(225, 225, 225, 0.9)";break;case"Overcast":n.style.backgroundColor="rgb(225, 225, 225, 0.683)";break;case"Light":case"Fog":n.style.backgroundColor="rgba(220, 235, 241, 0.932)";break;case"Moderate":n.style.backgroundColor="rgba(161, 207, 226, 0.932)";break;case"Heavy":n.style.backgroundColor="rgba(83, 163, 197, 0.932)";break;case"Patchy":n.style.backgroundColor="rgb(228, 229, 182)"}}return{updateDisplay:function(e){!function(n){const e=document.getElementById("city");e.hasChildNodes()&&(e.innerHTML=""),document.getElementById("title").textContent=`What's the weather in ${n.city}?`,Object.keys(n).forEach((t=>{const r=document.createElement("div");r.className=`${t}`,r.textContent=`${n[t]}`,e.appendChild(r)})),e.classList.add("visible")}(e.place),function(e){const t=document.getElementById("nowcast");t.hasChildNodes()&&(t.innerHTML=""),n(t,e),Object.keys(e).forEach((n=>{const r=document.createElement("div");if(r.className=`${n}`,"condition"===n?r.innerHTML=`Current Weather<br>${e[n]}`:r.textContent=`${e[n]}`,t.appendChild(r),"conditionIcon"===n){r.innerHTML="";const t=document.createElement("img");t.src=`${e[n]}`,r.appendChild(t)}})),t.classList.add("visible")}(e.current),function(e){const t=document.getElementById("forecast");t.hasChildNodes()&&(t.innerHTML="");let r=0;e.forEach((e=>{const a=document.createElement("div");a.className="forecast-day",a.setAttribute("data-day-num",`${r}`),t.appendChild(a),a.classList.add("visible"),a.classList.add("container"),n(a,e);for(const n in e){const t=document.createElement("div");if(t.className=`${n}`,"date"===n)switch(r){case 0:t.innerHTML=`Today<br>${e[n]}`;break;case 1:t.innerHTML=`Tomorrow<br>${e[n]}`;break;case 2:t.innerHTML=`Day After Torrow<br>${e[n]}`;break;case 3:t.innerHTML=`Day After That<br>${e[n]}`;break;default:t.innerHTML=""}else t.textContent=`${e[n]}`;if(a.appendChild(t),"conditionIcon"===n){t.innerHTML="";const r=document.createElement("img");r.src=`${e[n]}`,t.appendChild(r)}}r++}))}(e.forecast)}}})(),E=document.getElementById("search-btn"),h=document.getElementById("search-input"),B=document.getElementById("city-search");E.addEventListener("click",(()=>{u(B.value).then((n=>g.updateDisplay(C(n))))})),h.addEventListener("submit",(n=>{n.preventDefault()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,